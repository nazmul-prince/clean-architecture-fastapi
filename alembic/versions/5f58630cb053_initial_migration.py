"""initial migration

Revision ID: 5f58630cb053
Revises: 
Create Date: 2024-08-27 18:44:01.058793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f58630cb053'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_event_id'), 'event', ['id'], unique=False, schema='event_management')
    op.create_table('organization',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_organization_id'), 'organization', ['id'], unique=False, schema='event_management')
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_role_id'), 'role', ['id'], unique=False, schema='event_management')
    op.create_table('office',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['event_management.organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_office_id'), 'office', ['id'], unique=False, schema='event_management')
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('office_id', sa.BigInteger(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['office_id'], ['event_management.office.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_user_id'), 'user', ['id'], unique=False, schema='event_management')
    op.create_table('event_subscriber',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event_management.event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['event_management.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_event_subscriber_id'), 'event_subscriber', ['id'], unique=False, schema='event_management')
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['event_management.role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['event_management.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='event_management'
    )
    op.create_index(op.f('ix_event_management_user_role_id'), 'user_role', ['id'], unique=False, schema='event_management')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_event_management_user_role_id'), table_name='user_role', schema='event_management')
    op.drop_table('user_role', schema='event_management')
    op.drop_index(op.f('ix_event_management_event_subscriber_id'), table_name='event_subscriber', schema='event_management')
    op.drop_table('event_subscriber', schema='event_management')
    op.drop_index(op.f('ix_event_management_user_id'), table_name='user', schema='event_management')
    op.drop_table('user', schema='event_management')
    op.drop_index(op.f('ix_event_management_office_id'), table_name='office', schema='event_management')
    op.drop_table('office', schema='event_management')
    op.drop_index(op.f('ix_event_management_role_id'), table_name='role', schema='event_management')
    op.drop_table('role', schema='event_management')
    op.drop_index(op.f('ix_event_management_organization_id'), table_name='organization', schema='event_management')
    op.drop_table('organization', schema='event_management')
    op.drop_index(op.f('ix_event_management_event_id'), table_name='event', schema='event_management')
    op.drop_table('event', schema='event_management')
    # ### end Alembic commands ###
